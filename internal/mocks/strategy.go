// Code generated by MockGen. DO NOT EDIT.
// Source: strategy.go

// Package mock_balancer is a generated GoMock package.
package mock_balancer

import (
	reflect "reflect"

	balancer "github.com/Espina2/go-sql-connection-balancer"
	gomock "github.com/golang/mock/gomock"
)

// MockStrategy is a mock of Strategy interface.
type MockStrategy struct {
	ctrl     *gomock.Controller
	recorder *MockStrategyMockRecorder
}

// MockStrategyMockRecorder is the mock recorder for MockStrategy.
type MockStrategyMockRecorder struct {
	mock *MockStrategy
}

// NewMockStrategy creates a new mock instance.
func NewMockStrategy(ctrl *gomock.Controller) *MockStrategy {
	mock := &MockStrategy{ctrl: ctrl}
	mock.recorder = &MockStrategyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStrategy) EXPECT() *MockStrategyMockRecorder {
	return m.recorder
}

// AddNode mocks base method.
func (m *MockStrategy) AddNode(node *balancer.Node) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddNode", node)
}

// AddNode indicates an expected call of AddNode.
func (mr *MockStrategyMockRecorder) AddNode(node interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddNode", reflect.TypeOf((*MockStrategy)(nil).AddNode), node)
}

// Balance mocks base method.
func (m *MockStrategy) Balance() (*balancer.Node, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Balance")
	ret0, _ := ret[0].(*balancer.Node)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Balance indicates an expected call of Balance.
func (mr *MockStrategyMockRecorder) Balance() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Balance", reflect.TypeOf((*MockStrategy)(nil).Balance))
}

// Close mocks base method.
func (m *MockStrategy) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockStrategyMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockStrategy)(nil).Close))
}

// RemoveNode mocks base method.
func (m *MockStrategy) RemoveNode(node *balancer.Node) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RemoveNode", node)
}

// RemoveNode indicates an expected call of RemoveNode.
func (mr *MockStrategyMockRecorder) RemoveNode(node interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveNode", reflect.TypeOf((*MockStrategy)(nil).RemoveNode), node)
}
